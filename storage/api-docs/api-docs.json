{
    "openapi": "3.0.0",
    "info": {
        "title": "Homeweb API Documentation",
        "description": "Homeweb API endpoints",
        "contact": {
            "email": "imollm@uoc.edu"
        },
        "license": {
            "name": "MIT License",
            "url": "https://opensource.org/licenses/MIT"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://localhost/homeweb-backend/public/api",
            "description": "Localhost API Server"
        },
        {
            "url": "http://localhost:8080/homeweb-backend/public/api",
            "description": "Docker Host API Server"
        }
    ],
    "paths": {
        "/categories/create": {
            "post": {
                "tags": [
                    "Categories"
                ],
                "summary": "Store new category",
                "operationId": "App\\Http\\Controllers\\CategoryController::store",
                "requestBody": {
                    "description": "Category data",
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "description": "Name of category",
                                        "type": "string",
                                        "example": "Foo"
                                    },
                                    "image[]": {
                                        "description": "Image of category",
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "format": "binary"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Category added correctly.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Category added correctly"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Category exists.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Category exists"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Category not added.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Category not added"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized user.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized User"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/categories/index": {
            "get": {
                "tags": [
                    "Categories"
                ],
                "summary": "Get all categories",
                "operationId": "App\\Http\\Controllers\\CategoryController::index",
                "responses": {
                    "200": {
                        "description": "All categories.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "All categories"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/categories/{id}/show": {
            "get": {
                "tags": [
                    "Categories"
                ],
                "summary": "Get category by id",
                "operationId": "App\\Http\\Controllers\\CategoryController::show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of category",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The category was request.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "The category was request"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Category not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Category not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/categories/update": {
            "post": {
                "tags": [
                    "Categories"
                ],
                "summary": "Update category",
                "operationId": "App\\Http\\Controllers\\CategoryController::update",
                "requestBody": {
                    "description": "Category data",
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "description": "Name of category",
                                        "type": "string",
                                        "example": "Foo"
                                    },
                                    "image[]": {
                                        "description": "Image of category",
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "format": "binary"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Category modified correctly.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Category modified correctly"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Category not modified.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Category not modified"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Invalid put data."
                    },
                    "401": {
                        "description": "Unauthorized user.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized User"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/categories/{id}/delete": {
            "delete": {
                "tags": [
                    "Categories"
                ],
                "summary": "Delete category by id",
                "operationId": "App\\Http\\Controllers\\CategoryController::delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of category",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Category deleted successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Category deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Category not deleted.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Category not deleted"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Category has properties.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Category has properties"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "This category not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "This category not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized user.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized User"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/categories/name/{name}/properties": {
            "get": {
                "tags": [
                    "Categories"
                ],
                "summary": "Get all properties by category name",
                "operationId": "App\\Http\\Controllers\\CategoryController::getPropertiesByCategoryName",
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "Name of category",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "All properties of {categoryName} category."
                    }
                }
            }
        },
        "/id/{id}/properties": {
            "get": {
                "tags": [
                    "Categories"
                ],
                "summary": "Get all properties by category ID",
                "operationId": "App\\Http\\Controllers\\CategoryController::getPropertiesByCategoryId",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of category",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "All properties of category by id {id}."
                    }
                }
            }
        },
        "/categories/{id}/properties/groupByPrice": {
            "get": {
                "tags": [
                    "Categories"
                ],
                "summary": "Group properties of category by price",
                "operationId": "App\\Http\\Controllers\\CategoryController::getPropertiesGroupByPrice",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of category",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Properties of category {id} group by price.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Properties of category {id} group by price"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized user.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized User"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/cities/index": {
            "get": {
                "tags": [
                    "Cities"
                ],
                "summary": "Get all cities",
                "operationId": "App\\Http\\Controllers\\CityController::index",
                "responses": {
                    "200": {
                        "description": "List of all cities.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "List of all cities"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/cities/create": {
            "post": {
                "tags": [
                    "Cities"
                ],
                "summary": "Store new city",
                "operationId": "App\\Http\\Controllers\\CityController::create",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Foo"
                                    },
                                    "country_id": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "City created.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "City created"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "City already exists with same country.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "City already exists with same country"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Error when create city.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Error when create city"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Related country not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Related country not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized user.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized user"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/cities/{id}/show": {
            "get": {
                "tags": [
                    "Cities"
                ],
                "summary": "Get city by id",
                "operationId": "App\\Http\\Controllers\\CityController::show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of city",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "City found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": "{}"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "City found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "City not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "City not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/cities/update": {
            "put": {
                "tags": [
                    "Cities"
                ],
                "summary": "Update city",
                "operationId": "App\\Http\\Controllers\\CityController::update",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Foo"
                                    },
                                    "country_id": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "City updated successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "City updated successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Error while update city.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Error while update city"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized user.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized User"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/cities/{id}/delete": {
            "delete": {
                "tags": [
                    "Cities"
                ],
                "summary": "Delete city by id",
                "operationId": "App\\Http\\Controllers\\CityController::destroy",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of city",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "City deleted.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "City deleted"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Error while delete city.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Error while delete city"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Error, this city has properties related.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Error, this city has properties related"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "City not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "City not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized user.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized user"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/contact/send": {
            "get": {
                "tags": [
                    "Contact"
                ],
                "summary": "Send email",
                "description": "Send email",
                "operationId": "App\\Http\\Controllers\\ContactController::send",
                "requestBody": {
                    "description": "Pass user credentials",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "email",
                                    "subject",
                                    "message"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Your name"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "user1@homeweb.com"
                                    },
                                    "subject": {
                                        "type": "string",
                                        "example": "Subject of email"
                                    },
                                    "message": {
                                        "type": "string",
                                        "example": "Message of email"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Send it successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Mail was send"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Error while send it",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Email was not send"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            }
        },
        "/countries/index": {
            "get": {
                "tags": [
                    "Countries"
                ],
                "summary": "Get all countries",
                "operationId": "App\\Http\\Controllers\\CountryController::index",
                "responses": {
                    "200": {
                        "description": "All categories.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "List of all countries"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/countries/create": {
            "post": {
                "tags": [
                    "Countries"
                ],
                "summary": "Store new country",
                "operationId": "App\\Http\\Controllers\\CountryController::create",
                "requestBody": {
                    "description": "Country data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "description": "Name of category",
                                        "type": "string",
                                        "example": "Foo"
                                    },
                                    "code": {
                                        "description": "Code of country",
                                        "type": "string",
                                        "example": "FOO"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Country created.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Country created"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Country already exists.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Country already exists"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Invalid put data."
                    },
                    "401": {
                        "description": "Unauthorized user.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized User"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/countries/{id}/show": {
            "get": {
                "tags": [
                    "Countries"
                ],
                "summary": "Get country by id",
                "operationId": "App\\Http\\Controllers\\CountryController::show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of category",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Country found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Country found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Country not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Country not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/countries/update": {
            "put": {
                "tags": [
                    "Countries"
                ],
                "summary": "Update category",
                "operationId": "App\\Http\\Controllers\\CountryController::update",
                "requestBody": {
                    "description": "Country data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "description": "Name of category",
                                        "type": "string",
                                        "example": "Foo"
                                    },
                                    "code": {
                                        "description": "Code of country",
                                        "type": "string",
                                        "example": "FOO"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Country updated.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Country updated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Error while update country.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Error while update country"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Invalid put data."
                    },
                    "401": {
                        "description": "Unauthorized user.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized User"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/countries/{id}/delete": {
            "delete": {
                "tags": [
                    "Countries"
                ],
                "summary": "Delete country by id",
                "operationId": "App\\Http\\Controllers\\CountryController::destroy",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of country",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Country deleted.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Country deleted"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "The country can not be deleted.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "The country can not be deleted"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "The country have cities related.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "The country have cities related"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The country can not be found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "The country can not be found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized user.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized User"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/countries/{id}/citiesAndProperties": {
            "get": {
                "tags": [
                    "Countries"
                ],
                "summary": "Get all properties by category name",
                "operationId": "App\\Http\\Controllers\\CountryController::getCitiesAndProperties",
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "ID of country",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Cities and properties of country with id {id}.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Cities and properties of country with id {id}"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/features/index": {
            "get": {
                "tags": [
                    "Features"
                ],
                "summary": "Get all features",
                "operationId": "App\\Http\\Controllers\\FeatureController::index",
                "responses": {
                    "200": {
                        "description": "All features.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "All features"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No features in system.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "No features in system"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/features/create": {
            "post": {
                "tags": [
                    "Features"
                ],
                "summary": "Store new feature",
                "operationId": "App\\Http\\Controllers\\FeatureController::store",
                "requestBody": {
                    "description": "Feature data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "description": "Name of feature",
                                        "type": "string",
                                        "example": "Foo"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Feature created.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Feature created"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Error while creating feature.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Error while creating feature"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized user.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized User"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/features/{id}/show": {
            "get": {
                "tags": [
                    "Features"
                ],
                "summary": "Get feature by id",
                "operationId": "App\\Http\\Controllers\\FeatureController::show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of feature",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Feature by id.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Feature by id {id}"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Feature not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Feature not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/features/update": {
            "put": {
                "tags": [
                    "Features"
                ],
                "summary": "Update feature",
                "operationId": "App\\Http\\Controllers\\FeatureController::update",
                "requestBody": {
                    "description": "Feature data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "description": "Name of feature",
                                        "type": "string",
                                        "example": "Foo"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Feature updated.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Feature updated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Error while updating feature.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Error while updating feature"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Feature not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Feature not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Invalid put data."
                    },
                    "401": {
                        "description": "Unauthorized user.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized User"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/features/{id}/delete": {
            "delete": {
                "tags": [
                    "Features"
                ],
                "summary": "Delete feature by id",
                "operationId": "App\\Http\\Controllers\\FeatureController::destroy",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of feature",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Feature deleted.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Feature deleted"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Error while deleting feature.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Error while deleting feature"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "This feature can not be deleted.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "This feature can not be deleted"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized user.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized User"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/image/categories/{id}": {
            "get": {
                "tags": [
                    "Image"
                ],
                "summary": "Get image of category",
                "operationId": "App\\Http\\Controllers\\FileController::categories",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of category",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Category image.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Image of category with id {id}"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Image of category not found."
                    }
                }
            }
        },
        "/image/properties/{id}": {
            "get": {
                "tags": [
                    "Image"
                ],
                "summary": "Get image of property",
                "operationId": "App\\Http\\Controllers\\FileController::properties",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of property",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Property image.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Image of property with id {id}"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Image of property not found."
                    }
                }
            }
        },
        "/auth/register": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Registration",
                "description": "User registration",
                "operationId": "App\\Http\\Controllers\\PassportAuthController::register",
                "requestBody": {
                    "description": "User data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "email",
                                    "password",
                                    "phone",
                                    "address",
                                    "fiscal_id",
                                    "role_id"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "My name"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "user1@homeweb.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "PassWord12345"
                                    },
                                    "phone": {
                                        "type": "string",
                                        "example": "My phone"
                                    },
                                    "address": {
                                        "type": "string",
                                        "example": "My home address"
                                    },
                                    "fiscal_id": {
                                        "type": "string",
                                        "example": "My fiscal ID"
                                    },
                                    "role_id": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Logged in",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "dataUser": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "User 1"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "example": "user1@homeweb.com"
                                                },
                                                "accessToken": {
                                                    "type": "string",
                                                    "example": "eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJhdWQiOiIxIiwianRpIjoiZTRjMWEzNzE5YTc5ZTU3YWNlYjBlOWJmYWY2M2ZlNjU1NDI5ODdmYWIzZDdkNWMyZTJkZTUzNDUxMDQ2OGJmZmIzNmEwNjYwYmY2ZTY2OWYiLCJpYXQiOiIxNjIyMTM2MTg0Ljg4MzgyMiIsIm5iZiI6IjE2MjIxMzYxODQuODgzODM0IiwiZXhwIjoiMTY1MzY3MjE4NC44NzQ5NjQiLCJzdWIiOiIyIiwic2NvcGVzIjpbXX0.IjweTMVW2hDVOzGfIfoiMWYNGTnAQiiyyOCGvVr81z-UC5UVHIqdSmrgAY9H3IUpZbmLZQqgvzlAN6q0RMOSaVy35tc-aZwmNv8sIWRGOZriISRdQws4QW7fhpEQwY4GGY73vB0ISB8U7lPE0-qOhMO_S88JTsKf9DIqFnMdfFjFlhWBfPEj_CL81cuHWjGCzr-5OmiAMAyb_RgXh9X7HEOHqxEj0YHEa5hJapEWcHt7IT3ii4IFBqp59egWbRnzmx1bJGXA2tHaPQLohLoki6G0K9bxXF0C4V-AgHcTI7B9QFao-V6vEiBIlgkAoH368QQMxu2ePVXg83bfnbRe0WcIMqchGjtwIRLhzR3ZlUSpKKzwLIVhdEbWK9bWFmgqZXyojWBrOGJBFcYUJ0dZ0r1-9YLPfRPt4WiYOYLGgWqvRBNKGHopub5fx2p7lYx34_vcXH-iJkd2TIwCcVexjDs-dlGTh45xEby5LPaONwQzt6ZmYHPXb3NlQ1p9F96Fsjl11IPVWp45HRCAcsdUOJ_nosjW-COVsMzU4eAlgWo0MjKwAYyRBwvCkog2B3NIRWmQZSH49FOC3XjbXh_AFBz0FBklifKf9GsiXwOTXPRMjJCUUVubGofZ_Q1_qA1s6ENBWca16V3ThC-eyCI2tPZpmPnNOrLXyRFeaieJtJk"
                                                },
                                                "role": {
                                                    "type": "string",
                                                    "example": "admin"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unregistred user",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized user"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/auth/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Sign in",
                "description": "Login by email, password",
                "operationId": "App\\Http\\Controllers\\PassportAuthController::login",
                "requestBody": {
                    "description": "Pass user credentials",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "user1@homeweb.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "PassWord12345"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Logged in",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "dataUser": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "User 1"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "example": "user1@homeweb.com"
                                                },
                                                "accessToken": {
                                                    "type": "string",
                                                    "example": "eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJhdWQiOiIxIiwianRpIjoiZTRjMWEzNzE5YTc5ZTU3YWNlYjBlOWJmYWY2M2ZlNjU1NDI5ODdmYWIzZDdkNWMyZTJkZTUzNDUxMDQ2OGJmZmIzNmEwNjYwYmY2ZTY2OWYiLCJpYXQiOiIxNjIyMTM2MTg0Ljg4MzgyMiIsIm5iZiI6IjE2MjIxMzYxODQuODgzODM0IiwiZXhwIjoiMTY1MzY3MjE4NC44NzQ5NjQiLCJzdWIiOiIyIiwic2NvcGVzIjpbXX0.IjweTMVW2hDVOzGfIfoiMWYNGTnAQiiyyOCGvVr81z-UC5UVHIqdSmrgAY9H3IUpZbmLZQqgvzlAN6q0RMOSaVy35tc-aZwmNv8sIWRGOZriISRdQws4QW7fhpEQwY4GGY73vB0ISB8U7lPE0-qOhMO_S88JTsKf9DIqFnMdfFjFlhWBfPEj_CL81cuHWjGCzr-5OmiAMAyb_RgXh9X7HEOHqxEj0YHEa5hJapEWcHt7IT3ii4IFBqp59egWbRnzmx1bJGXA2tHaPQLohLoki6G0K9bxXF0C4V-AgHcTI7B9QFao-V6vEiBIlgkAoH368QQMxu2ePVXg83bfnbRe0WcIMqchGjtwIRLhzR3ZlUSpKKzwLIVhdEbWK9bWFmgqZXyojWBrOGJBFcYUJ0dZ0r1-9YLPfRPt4WiYOYLGgWqvRBNKGHopub5fx2p7lYx34_vcXH-iJkd2TIwCcVexjDs-dlGTh45xEby5LPaONwQzt6ZmYHPXb3NlQ1p9F96Fsjl11IPVWp45HRCAcsdUOJ_nosjW-COVsMzU4eAlgWo0MjKwAYyRBwvCkog2B3NIRWmQZSH49FOC3XjbXh_AFBz0FBklifKf9GsiXwOTXPRMjJCUUVubGofZ_Q1_qA1s6ENBWca16V3ThC-eyCI2tPZpmPnNOrLXyRFeaieJtJk"
                                                },
                                                "role": {
                                                    "type": "string",
                                                    "example": "admin"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unregistred user",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized user"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/auth/logout": {
            "get": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Sign out",
                "description": "User logout",
                "operationId": "App\\Http\\Controllers\\PassportAuthController::logout",
                "responses": {
                    "200": {
                        "description": "Logged out",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "dataUser": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/auth/user": {
            "get": {
                "tags": [
                    "Authentication"
                ],
                "summary": "User info",
                "description": "Get user info",
                "operationId": "App\\Http\\Controllers\\PassportAuthController::user",
                "responses": {
                    "200": {
                        "description": "Logged in",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "User 1"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "example": "user1@homeweb.com"
                                                },
                                                "email_verified_at": {
                                                    "type": "string",
                                                    "example": "null"
                                                },
                                                "phone": {
                                                    "type": "string",
                                                    "example": "My phone"
                                                },
                                                "address": {
                                                    "type": "string",
                                                    "example": "My home address"
                                                },
                                                "fiscal_id": {
                                                    "type": "string",
                                                    "example": "My fiscal ID"
                                                },
                                                "role_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "example": "2021-05-05T20:10:21.000000Z"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "example": "2021-05-05T20:10:21.000000Z"
                                                },
                                                "role": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "name": {
                                                            "type": "string",
                                                            "example": "admin"
                                                        },
                                                        "description": {
                                                            "type": "string",
                                                            "example": "Administrador"
                                                        },
                                                        "created_at": {
                                                            "type": "string",
                                                            "example": "2021-05-05T20:10:21.000000Z"
                                                        },
                                                        "updated_at": {
                                                            "type": "string",
                                                            "example": "2021-05-05T20:10:21.000000Z"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Auth user"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/priceHistory/index": {
            "get": {
                "tags": [
                    "Price History"
                ],
                "summary": "Get all price changes",
                "operationId": "App\\Http\\Controllers\\PriceHistoryController::index",
                "responses": {
                    "200": {
                        "description": "List of all price histories.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "List of all price histories"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized user.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized User"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/priceHistory/create": {
            "post": {
                "tags": [
                    "Price History"
                ],
                "summary": "Store new price change",
                "operationId": "App\\Http\\Controllers\\PriceHistoryController::create",
                "requestBody": {
                    "description": "Country data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "property_id": {
                                        "description": "ID of property",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "start_date": {
                                        "description": "Start date",
                                        "type": "string",
                                        "example": "2021-02-01 12:00:45"
                                    },
                                    "amount": {
                                        "description": "New price",
                                        "type": "integer",
                                        "example": 1000000
                                    },
                                    "end_date": {
                                        "description": "Start date",
                                        "type": "string",
                                        "example": ""
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Price change created.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Price change created"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Error when store price change.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Error when store price change"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Incorrect start date, or Property have same price.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Start timestamp given is lower or equal than last price change start timestamp / This property has identical price change"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Invalid put data."
                    },
                    "401": {
                        "description": "Check if is yours, or Unauthorized user.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "The property is not yours / Unauthorized User"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/priceHistory/{propertyId}/show": {
            "get": {
                "tags": [
                    "Price History"
                ],
                "summary": "Get price history by property id",
                "operationId": "App\\Http\\Controllers\\PriceHistoryController::show",
                "parameters": [
                    {
                        "name": "propertyId",
                        "in": "path",
                        "description": "ID of property",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Price history of this property.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Price history of property"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Property not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Property not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "This property is not yours or Unauthorized user.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "This property is not yours / Unauthorized User"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/priceHistory/propertiesOfOwner": {
            "get": {
                "tags": [
                    "Price History"
                ],
                "summary": "Get price changes of properties owned by owner",
                "operationId": "App\\Http\\Controllers\\PriceHistoryController::getPriceChangeOfAuthOwner",
                "responses": {
                    "200": {
                        "description": "Price changes of property owned by owner.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Price changes of properties owned by owner with id X"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized user.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "TUnauthorized User"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/properties/index": {
            "get": {
                "tags": [
                    "Properties"
                ],
                "summary": "Get all properties",
                "operationId": "App\\Http\\Controllers\\PropertyController::index",
                "responses": {
                    "200": {
                        "description": "List of all activated properties.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "List of all activated properties"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/properties/{id}/show": {
            "get": {
                "tags": [
                    "Properties"
                ],
                "summary": "Get property by id",
                "operationId": "App\\Http\\Controllers\\PropertyController::show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of property",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The property was request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "The property was request"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Property not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Property not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/properties/showByFilter": {
            "get": {
                "tags": [
                    "Properties"
                ],
                "summary": "Get property by id",
                "operationId": "App\\Http\\Controllers\\PropertyController::showByFilter",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "query",
                        "description": "Reference of property",
                        "required": true
                    },
                    {
                        "name": "price",
                        "in": "query",
                        "description": "Range price ID, for example 1 is 100.000 to 200.000. For more clarification go to range_prices table on DB.",
                        "required": true
                    },
                    {
                        "name": "location",
                        "in": "query",
                        "description": "City ID",
                        "required": true
                    },
                    {
                        "name": "category",
                        "in": "query",
                        "description": "Category ID",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Result of filter",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Properties request"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Invalid put data."
                    },
                    "204": {
                        "description": "No content"
                    }
                }
            }
        },
        "/properties/create": {
            "post": {
                "tags": [
                    "Properties"
                ],
                "summary": "Store new property",
                "operationId": "App\\Http\\Controllers\\PropertyController::create",
                "requestBody": {
                    "description": "Property data",
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "user_id": {
                                        "description": "Owner ID",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "category_id": {
                                        "description": "Cateogry ID",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "city_id": {
                                        "description": "City ID",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "title": {
                                        "description": "Property title",
                                        "type": "string",
                                        "example": "A beautiful house."
                                    },
                                    "reference": {
                                        "description": "Reference of property, is UNIQUE",
                                        "type": "string",
                                        "example": "ABC123"
                                    },
                                    "image[]": {
                                        "description": "Image of property",
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "format": "binary"
                                        }
                                    },
                                    "plot_meters": {
                                        "description": "Plot meters of property",
                                        "type": "number",
                                        "example": 300.25
                                    },
                                    "built_meters": {
                                        "description": "Built meters of property",
                                        "type": "number",
                                        "example": 200
                                    },
                                    "rooms": {
                                        "description": "Number of rooms",
                                        "type": "integer",
                                        "example": 3
                                    },
                                    "baths": {
                                        "description": "Number of baths",
                                        "type": "integer",
                                        "example": 2
                                    },
                                    "address": {
                                        "description": "Address of property",
                                        "type": "string",
                                        "example": "St. Homeweb, 123"
                                    },
                                    "longitude": {
                                        "description": "Geolocation coordinate longitude",
                                        "type": "string",
                                        "example": "1.939796"
                                    },
                                    "latitude": {
                                        "description": "Geolocation coordinate latitude",
                                        "type": "string",
                                        "example": "41.636433"
                                    },
                                    "description": {
                                        "description": "Description of property",
                                        "type": "string",
                                        "example": "With sea views it is one of the most well located and beautiful"
                                    },
                                    "energetic_certification": {
                                        "description": "Status of energetic certification, values must be: obtingut, en proces i pendent",
                                        "type": "string",
                                        "example": "pendent"
                                    },
                                    "sold": {
                                        "description": "Specify if property is sold",
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "active": {
                                        "description": "Specify if property is visible on public web",
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "price": {
                                        "description": "Initial price of property",
                                        "type": "string",
                                        "example": "100000"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Property created.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Property added correctly"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Property not created.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Property not added"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Invalid put data."
                    },
                    "401": {
                        "description": "Unauthorized user.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized User"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/sales/create": {
            "post": {
                "tags": [
                    "Properties"
                ],
                "summary": "Update property",
                "operationId": "App\\Http\\Controllers\\PropertyController::update",
                "requestBody": {
                    "description": "Property data",
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "id": {
                                        "description": "Property ID",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "user_id": {
                                        "description": "Owner ID",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "category_id": {
                                        "description": "Cateogry ID",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "city_id": {
                                        "description": "City ID",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "title": {
                                        "description": "Property title",
                                        "type": "string",
                                        "example": "A beautiful house."
                                    },
                                    "reference": {
                                        "description": "Reference of property, is UNIQUE",
                                        "type": "string",
                                        "example": "ABC123"
                                    },
                                    "image[]": {
                                        "description": "Image of property",
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "format": "binary"
                                        }
                                    },
                                    "plot_meters": {
                                        "description": "Plot meters of property",
                                        "type": "number",
                                        "example": 300.25
                                    },
                                    "built_meters": {
                                        "description": "Built meters of property",
                                        "type": "number",
                                        "example": 200
                                    },
                                    "rooms": {
                                        "description": "Number of rooms",
                                        "type": "integer",
                                        "example": 3
                                    },
                                    "baths": {
                                        "description": "Number of baths",
                                        "type": "integer",
                                        "example": 2
                                    },
                                    "address": {
                                        "description": "Address of property",
                                        "type": "string",
                                        "example": "St. Homeweb, 123"
                                    },
                                    "longitude": {
                                        "description": "Geolocation coordinate longitude",
                                        "type": "string",
                                        "example": "1.939796"
                                    },
                                    "latitude": {
                                        "description": "Geolocation coordinate latitude",
                                        "type": "string",
                                        "example": "41.636433"
                                    },
                                    "description": {
                                        "description": "Description of property",
                                        "type": "string",
                                        "example": "With sea views it is one of the most well located and beautiful"
                                    },
                                    "energetic_certification": {
                                        "description": "Status of energetic certification, values must be: obtingut, en proces i pendent",
                                        "type": "string",
                                        "example": "pendent"
                                    },
                                    "sold": {
                                        "description": "Specify if property is sold",
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "active": {
                                        "description": "Specify if property is visible on public web",
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "price": {
                                        "description": "Initial price of property",
                                        "type": "string",
                                        "example": "100000"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Property updated successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Property updated successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Property can not be updated.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Property can not be updated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Invalid put data."
                    },
                    "404": {
                        "description": "Property not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Property not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized user.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized User"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/properties/{id}/delete": {
            "delete": {
                "tags": [
                    "Properties"
                ],
                "summary": "Delete property by id",
                "operationId": "App\\Http\\Controllers\\PropertyController::delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of property",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Property deleted successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Property deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Property can not be deleted, it info can not be deleted.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Property can not be deleted, it info can not be deleted"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Property not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Property not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized user.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized User"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/properties/{id}/setActive/{status}": {
            "get": {
                "tags": [
                    "Properties"
                ],
                "summary": "Change visibility of property",
                "operationId": "App\\Http\\Controllers\\PropertyController::setActive",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of property",
                        "required": true
                    },
                    {
                        "name": "status",
                        "in": "path",
                        "description": "Status of visibility",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Visibility was toggled.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Visibility was toggled"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Error when active/desactive property X.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Error when active/desactive property X"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Property not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Property not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized user.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized User"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/properties/{id}/owner": {
            "get": {
                "tags": [
                    "Properties"
                ],
                "summary": "Get owner of property if have it",
                "operationId": "App\\Http\\Controllers\\PropertyController::owner",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of property",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Owner of property.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Owner of property with id X"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Property not found / Owner can not be retrieve.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Property not found / Owner can not be retrieve"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/properties/last": {
            "get": {
                "tags": [
                    "Properties"
                ],
                "summary": "Get last 6 properties added.",
                "operationId": "App\\Http\\Controllers\\PropertyController::last",
                "responses": {
                    "200": {
                        "description": "Last 6 properties.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Last 6 properties"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/properties/active": {
            "get": {
                "tags": [
                    "Properties"
                ],
                "summary": "Get all properties visible.",
                "operationId": "App\\Http\\Controllers\\PropertyController::active",
                "responses": {
                    "200": {
                        "description": "Active properties on system.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Active properties on system"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/properties/lastActive": {
            "get": {
                "tags": [
                    "Properties"
                ],
                "summary": "Get last 6 properties added and visible.",
                "operationId": "App\\Http\\Controllers\\PropertyController::lastActive",
                "responses": {
                    "200": {
                        "description": "Last active properties.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Last active properties"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/properties/forSale": {
            "get": {
                "tags": [
                    "Properties"
                ],
                "summary": "Get properties for sale.",
                "operationId": "App\\Http\\Controllers\\PropertyController::getForSale",
                "responses": {
                    "200": {
                        "description": "All properties for sale.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "All properties for sale"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/properties/WithLimit/{limit}": {
            "get": {
                "tags": [
                    "Properties"
                ],
                "summary": "Get property by id",
                "operationId": "App\\Http\\Controllers\\PropertyController::getPropertiesWithLimit",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "path",
                        "description": "Limit of last properties we can get",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Last X properties on system",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Last X properties on system"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/properties/getPropertiesOwnedByOwner": {
            "get": {
                "tags": [
                    "Properties"
                ],
                "summary": "Get properties owned by owner",
                "operationId": "App\\Http\\Controllers\\PropertyController::getPropertiesOfAuthOwner",
                "responses": {
                    "200": {
                        "description": "Properties owned by owner with id X",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Properties owned by owner with id X"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized user.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized User"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/rangePrice/index": {
            "get": {
                "tags": [
                    "Prices Range"
                ],
                "summary": "Get all range of prices",
                "operationId": "App\\Http\\Controllers\\RangePriceController::index",
                "responses": {
                    "200": {
                        "description": "Get all range prices.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "All range of prices"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/roles/all": {
            "get": {
                "tags": [
                    "Roles"
                ],
                "summary": "Get all roles",
                "operationId": "App\\Http\\Controllers\\RoleController::all",
                "responses": {
                    "200": {
                        "description": "All categories.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "All roles of system"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/roles/{id}": {
            "get": {
                "tags": [
                    "Roles"
                ],
                "summary": "Get role by user id",
                "operationId": "App\\Http\\Controllers\\RoleController::userRole",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of user",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Role of user.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "ARole of user by id X"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/roles/myRole": {
            "get": {
                "tags": [
                    "Roles"
                ],
                "summary": "Get my role",
                "operationId": "App\\Http\\Controllers\\RoleController::myRole",
                "responses": {
                    "200": {
                        "description": "Get your role.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Your role"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/sales/{limit}/index": {
            "get": {
                "tags": [
                    "Sales"
                ],
                "summary": "Get limited sales",
                "operationId": "App\\Http\\Controllers\\SaleController::index",
                "responses": {
                    "200": {
                        "description": "All categories.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "All sales of user X with role Y"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No sales in system.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "No sales in system"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized user.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized User"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/sales/{hashId}/showByHashId": {
            "get": {
                "tags": [
                    "Sales"
                ],
                "summary": "Get sale by hash id",
                "operationId": "App\\Http\\Controllers\\SaleController::showByHashId",
                "parameters": [
                    {
                        "name": "hashId",
                        "in": "path",
                        "description": "Hash ID of sale",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Sale by hash id X.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Sale by hash id X"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Sale not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Any sale with this params"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized user.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized User"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/sales/actualYear": {
            "get": {
                "tags": [
                    "Sales"
                ],
                "summary": "Get sales of actual year",
                "operationId": "App\\Http\\Controllers\\SaleController::getSalesOfActualYear",
                "responses": {
                    "200": {
                        "description": "Sales of 2021",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Sales of 2021"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized user.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized User"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/sales/salesBy": {
            "get": {
                "tags": [
                    "Sales"
                ],
                "summary": "Get sales by categories, countries, cities and sellers",
                "operationId": "App\\Http\\Controllers\\SaleController::salesBy",
                "responses": {
                    "200": {
                        "description": "Sales by categories, countries, cities and sellers",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Sales by categories, countries, cities and sellers"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized user.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized User"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/sales/update": {
            "put": {
                "tags": [
                    "Sales"
                ],
                "summary": "Update sale",
                "operationId": "App\\Http\\Controllers\\SaleController::update",
                "requestBody": {
                    "description": "Sale data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "property_id": {
                                        "description": "Property ID",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "buyer_id": {
                                        "description": "Customer ID",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "seller_id": {
                                        "description": "Employee ID",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "date": {
                                        "description": "Date of sale",
                                        "type": "string",
                                        "example": "2021-05-03"
                                    },
                                    "amount": {
                                        "description": "Property final price of sale",
                                        "type": "integer",
                                        "example": 1000000
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Sale updated successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Sale updated successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Error while update sale.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Error while update sale"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Sale not exists",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Sale not exists"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Your are not related or Unauthorized user.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Your are not related / Unauthorized User"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/sales/mySales": {
            "get": {
                "tags": [
                    "Sales"
                ],
                "summary": "Get sales of seller (user with employee role)",
                "operationId": "App\\Http\\Controllers\\SaleController::getSalesBySeller",
                "responses": {
                    "200": {
                        "description": "Sales of employee with id X",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Sales of employee with id X"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized user.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized User"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/sales/myPurchases": {
            "get": {
                "tags": [
                    "Sales"
                ],
                "summary": "Get sales of buyer (user with customer role)",
                "operationId": "App\\Http\\Controllers\\SaleController::getPurchasesByCustomer",
                "responses": {
                    "200": {
                        "description": "Purchases of customer with id X",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Purchases of customer with id X"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized user.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized User"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/tours/index": {
            "get": {
                "tags": [
                    "Tours"
                ],
                "summary": "Get all tours",
                "operationId": "App\\Http\\Controllers\\TourController::index",
                "responses": {
                    "200": {
                        "description": "All tours.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "All tours"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized user.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized User"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/tours/create": {
            "post": {
                "tags": [
                    "Tours"
                ],
                "summary": "Store new tour",
                "operationId": "App\\Http\\Controllers\\TourController::create",
                "requestBody": {
                    "description": "Tour data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "property_id": {
                                        "description": "Property ID",
                                        "type": "string",
                                        "example": 1
                                    },
                                    "customer_id": {
                                        "description": "Customer ID",
                                        "type": "string",
                                        "example": 2
                                    },
                                    "employee_id": {
                                        "description": "Employee ID",
                                        "type": "string",
                                        "example": 3
                                    },
                                    "date": {
                                        "description": "Date",
                                        "type": "string",
                                        "example": "2021-03-01"
                                    },
                                    "time": {
                                        "description": "Hour",
                                        "type": "string",
                                        "example": "10:00:00"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Tour created.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Tour created"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "At least one actor is not available, choose another combination.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "At least one actor is not available, choose another combination"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Customer or employee or property not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Some resource not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Error while create tour.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Error while create tour"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Invalid put data."
                    },
                    "401": {
                        "description": "Unauthorized user.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized User"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/tours/show/{limit}": {
            "get": {
                "tags": [
                    "Tours"
                ],
                "summary": "Get tour by  hash id",
                "operationId": "App\\Http\\Controllers\\TourController::show",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "path",
                        "description": "Number of tours was needed",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request tours.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "The tours was request"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized user.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized User"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/tours/{hashId}/show": {
            "get": {
                "tags": [
                    "Tours"
                ],
                "summary": "Get tour by  hash id",
                "operationId": "App\\Http\\Controllers\\TourController::showByHashId",
                "parameters": [
                    {
                        "name": "hashId",
                        "in": "path",
                        "description": "Hash ID of tour",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request tours.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Tour by hash id X"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Tour not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Tour not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized user.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized User"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/tours/{propertyId}/show": {
            "get": {
                "tags": [
                    "Tours"
                ],
                "summary": "Get tours by property id",
                "operationId": "App\\Http\\Controllers\\TourController::showByPropertyId",
                "parameters": [
                    {
                        "name": "propertyId",
                        "in": "path",
                        "description": "Property ID",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request tours.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Tour by hash id X"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Property not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Property not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Tour is not related with user was request it.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "The property is not yours / You have no tours with this property"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Some error when retrieve tours.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Some error when retrieve tours"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized user.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized User"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/tours/update": {
            "put": {
                "tags": [
                    "Tours"
                ],
                "summary": "Update tour",
                "operationId": "App\\Http\\Controllers\\TourController::update",
                "requestBody": {
                    "description": "Tour data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "property_id": {
                                        "description": "Property ID",
                                        "type": "string",
                                        "example": 1
                                    },
                                    "customer_id": {
                                        "description": "Customer ID",
                                        "type": "string",
                                        "example": 2
                                    },
                                    "employee_id": {
                                        "description": "Employee ID",
                                        "type": "string",
                                        "example": 3
                                    },
                                    "date": {
                                        "description": "Date",
                                        "type": "string",
                                        "example": "2021-03-01"
                                    },
                                    "time": {
                                        "description": "Hour",
                                        "type": "string",
                                        "example": "10:00:00"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Tour updated successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Tour updated successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "There are not availability.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "There are not availability"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Tour not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Tour not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Error while updating tour.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Error while updating tour"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Invalid put data."
                    },
                    "401": {
                        "description": "This tour it is not related to you / Unauthorized user.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "This tour it is not related to you / Unauthorized User"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/tours/{hashId}/delete": {
            "delete": {
                "tags": [
                    "Tours"
                ],
                "summary": "Delete tour by hash id",
                "operationId": "App\\Http\\Controllers\\TourController::destroy",
                "parameters": [
                    {
                        "name": "hashId",
                        "in": "path",
                        "description": "Hash ID of tour",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Tour deleted successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Tour deleted"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Error while deleting tour.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Error while deleting tour"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Tour not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Tour not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Tour is not yours / Unauthorized user.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Tour is not yours / Unauthorized User"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/tours/byEmployee": {
            "get": {
                "tags": [
                    "Tours"
                ],
                "summary": "Get employee tours",
                "operationId": "App\\Http\\Controllers\\TourController::getToursByEmployee",
                "responses": {
                    "200": {
                        "description": "Request tours of employee.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Tour of employee with id X"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized user.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized User"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/users/update": {
            "put": {
                "tags": [
                    "Users"
                ],
                "summary": "Update user info",
                "operationId": "App\\Http\\Controllers\\UserController::update",
                "responses": {
                    "200": {
                        "description": "User updated.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User updated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Error while updating user info.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Error while updating user"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/users/owners": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get owners of system",
                "operationId": "App\\Http\\Controllers\\UserController::owners",
                "responses": {
                    "200": {
                        "description": "All owners.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "All owners"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/users/customers": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get customers of system",
                "operationId": "App\\Http\\Controllers\\UserController::customers",
                "responses": {
                    "200": {
                        "description": "All customers.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "All customers"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/users/employees": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get employees of system",
                "operationId": "App\\Http\\Controllers\\UserController::employees",
                "responses": {
                    "200": {
                        "description": "All employees.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "All employees"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        }
    },
    "components": {
        "securitySchemes": {
            "apiAuth": {
                "type": "http",
                "description": "Use first Authentication -> /auth/login endpoint, with email and password and get JWT to put into this field",
                "name": "Token based Based",
                "in": "header",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    },
    "security": [
        []
    ]
}